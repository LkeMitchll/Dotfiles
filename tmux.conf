set-option -g default-shell /usr/local/bin/fish
setw -g mode-keys vi

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a

# color
set -g default-terminal "xterm-256color"

# increase scrollback lines
set -g history-limit 10000

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# set window split
bind-key v split-window -h

# window title format
set-window-option -g window-status-format ' #W '
set-window-option -g window-status-current-format ' #W '
# default window title colors
set-window-option -g window-status-fg colour8
set-window-option -g window-status-bg default
set-window-option -g window-status-activity-bg magenta
set-window-option -g window-status-activity-fg black
# active window title colors
set-window-option -g window-status-current-fg green
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bold
# auto window rename
set-window-option -g automatic-rename off

# pane border
set-option -g pane-border-fg colour8
set-option -g pane-border-bg default
set-option -g pane-active-border-fg blue
set-option -g pane-active-border-bg default

# message text
set-option -g message-bg black
set-option -g message-fg green

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour magenta

# center align window list
set -g status-justify centre

# update the status bar every second
set -g status-interval 1

# status bar colours
set-option -g status-bg black
set-option -g status-fg colour8
set-option -g status-attr default

# format the status bar
set -g status-right-length 140
set -g status-left-length 40
set -g status-left ' #[fg=blue]#{session_name} \
#[fg=yellow]->>#[default]'
set -g status-right '\
#[fg=yellow]<<-\
#[fg=green] #(tmux-spotify-info) \
#[fg=cyan]%H:%M %a %d/%m \
#[fg=yellow]<<- \
#[fg=cyan]#{battery_percentage} \
#[fg=yellow]<<- \
#[fg=cyan]#{online_status} '

# Allows for faster key repetition
set -s escape-time 0

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/fish"

# Vi copypaste mode
set-window-option -g mode-keys vi
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# switch to another session (ask)
bind S command-prompt -p "Name of session: " "attach -t %%"

# Clear the pane
bind C send-keys "clear" \; send-keys "Enter"

# resize splits quickly
bind-key { resize-pane -L 20
bind-key } resize-pane -R 20

# Enter copy-mode and scroll simply
bind-key s copy-mode \; send-keys PgUp

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# List of plugins
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  tmux-plugins/tmux-battery        \
  tmux-plugins/tmux-online-status  \
  tmux-plugins/tmux-copycat        \'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# Online icon
set -g @online_icon "✓"
set -g @offline_icon "✘"

# Initializes TMUX plugin manager.
run-shell '~/.tmux/plugins/tpm/tpm'
